// Before checking out the json of this pipeline shader I highly recommend checking out the json of the canvas pipelines,
// it serves as better documentation.
{
	nameKey: "pipeline.forgetmenot.name",
	descriptionKey: "pipeline.forgetmenot.desc",

	glslVersion: 330,
	smoothBrightnessBidirectionaly: true,
	rainSmoothingFrames: 100,
	enablePBR: true,
	runVanillaClear: true,

	materialProgram: {
		vertexSource: "forgetmenot:shaders/gbuffer/main.vert",
		fragmentSource: "forgetmenot:shaders/gbuffer/main.frag",

		samplers: [
			"u_skybox",
			"u_transmittance",
			"u_glint"
		],
		samplerImages: [
			"skybox",
			"transmittance_lut"
			"minecraft:textures/misc/enchanted_item_glint.png"
		]
	},

	drawTargets: {
		solidTerrain: "main_gbuffer",
		translucentTerrain: "translucent_gbuffer",
		translucentEntity: "entity_gbuffer",
		weather: "weather_gbuffer",
		clouds: "clouds_gbuffer",
		translucentParticles: "particles_gbuffer"
	},

	fabulousTargets: {
		translucent: "translucent_unmanaged",
		entity: "entity_unmanaged",
		weather: "weather_unmanaged",
		clouds: "clouds_unmanaged",
		particles: "particles_unmanaged"
	},

	defaultFramebuffer: "main_unmanaged",

	images: [
		{
			name: "main_color",
			lod: 0,
			// HDR color format - needed for transferring color data outside the range of [0, 1]
			// Make sure all buffers your color info passes through have a floating point format, else you'll lose information
			// If you only need rgb, R11F_G11F_B10F is best, if you need rgba, use RGBA16F
			internalFormat: "RGBA16F",
			pixelFormat: "RGBA",
			pixelDataType: "UNSIGNED_BYTE",
			target: "TEXTURE_2D",
			texParams: [
				{name: "TEXTURE_MIN_FILTER", val: "NEAREST"},
				{name: "TEXTURE_MAG_FILTER", val: "NEAREST"},
				{name: "TEXTURE_WRAP_S", val: "CLAMP_TO_EDGE"}, 
				{name: "TEXTURE_WRAP_T", val: "CLAMP_TO_EDGE"}
			]
		},
		{
			name: "all_data",
			lod: 0,
			internalFormat: "RGB32UI",
			pixelFormat: "RGB_INTEGER",
			pixelDataType: "UNSIGNED_INT",
			target: "TEXTURE_2D",
			texParams: [
				{name: "TEXTURE_MIN_FILTER", val: "NEAREST"},
				{name: "TEXTURE_MAG_FILTER", val: "NEAREST"},
				{name: "TEXTURE_WRAP_S", val: "CLAMP_TO_EDGE"}, 
				{name: "TEXTURE_WRAP_T", val: "CLAMP_TO_EDGE"}
			]
		},
		{
			name: "vertex_normal",
			lod: 0,
			internalFormat: "RGB8",
			pixelFormat: "RGB",
			pixelDataType: "UNSIGNED_INT",
			target: "TEXTURE_2D",
			texParams: [
				{name: "TEXTURE_MIN_FILTER", val: "NEAREST"},
				{name: "TEXTURE_MAG_FILTER", val: "NEAREST"},
				{name: "TEXTURE_WRAP_S", val: "CLAMP_TO_EDGE"}, 
				{name: "TEXTURE_WRAP_T", val: "CLAMP_TO_EDGE"}
			]
		},
		{
			name: "main_data",
			lod: 0,
			internalFormat: "RGB32UI",
			pixelFormat: "RGB_INTEGER",
			pixelDataType: "UNSIGNED_INT",
			target: "TEXTURE_2D",
			texParams: [
				{name: "TEXTURE_MIN_FILTER", val: "NEAREST"},
				{name: "TEXTURE_MAG_FILTER", val: "NEAREST"},
				{name: "TEXTURE_WRAP_S", val: "CLAMP_TO_EDGE"}, 
				{name: "TEXTURE_WRAP_T", val: "CLAMP_TO_EDGE"}
			]
		},
		{
			name: "main_depth",
			lod: 0,
			internalFormat: "DEPTH_COMPONENT",
			pixelFormat: "DEPTH_COMPONENT",
			pixelDataType: "FLOAT",
			target: "TEXTURE_2D",
			texParams: [ 
				{name: "TEXTURE_MIN_FILTER", val: "NEAREST"}, 
				{name: "TEXTURE_MAG_FILTER", val: "NEAREST"},
				{name: "TEXTURE_WRAP_S", val: "CLAMP_TO_EDGE"}, 
				{name: "TEXTURE_WRAP_T", val: "CLAMP_TO_EDGE"},
				{name: "TEXTURE_COMPARE_MODE", val: "NONE"}
			]
		}
	],

	framebuffers: [
		{
			name: "main_gbuffer",
			depthAttachment: {
				image: "main_depth", 
				clearDepth: 1.0
			},
			colorAttachments: [
				{
					image: "main_color",
					clearColor: 0x00000000
				},
				{
					image: "all_data",
					clearColor: 0x00000000
				},
				{
					image: "vertex_normal",
					clearColor: 0x00000000
				},
				{
					image: "main_data",
					clearColor: 0x00000000
				}
			]
		},
		{
			name: "main_unmanaged",
			depthAttachment: {
				image: "main_depth"
			},
			colorAttachments: [
				{
					image: "main_color"
				}
			]
		}
	],

	sky: {
		defaultZenithAngle: {
			default: 40,
			option: "sun_angle"
		}
	},


	include: [
		"forgetmenot:include/config.json5",
		"forgetmenot:include/composite/clouds.json5",
		"forgetmenot:include/composite/entity.json5",
		"forgetmenot:include/composite/particles.json5",
		"forgetmenot:include/composite/translucent.json5",
		"forgetmenot:include/composite/weather.json5",
		"forgetmenot:include/shadow.json5"
		"forgetmenot:include/stage_pre.json5"
		"forgetmenot:include/stage_fabulous.json5"
		"forgetmenot:include/stage_fullscreen.json5"
	]
}